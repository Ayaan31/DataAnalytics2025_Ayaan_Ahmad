# plot sample size power
example <- wp.correlation(n=seq(50, 100, 10),
0.3, alpha = 0.05)
plot(example)
# D = effect size, how many stds away
wp.t(n1 = NULL, d = 0.03, power = 0.08, type = "paired")
wp.t(n1 = NULL, d = 0.03, power = 0.08, type = "two.sample")
# We can sample 1000
# Dont know effect size
# What effect size can we detect
wp.t(n1 = 1000, d = NULL, power = 0.8, type = "two.sample")
# .2n is for when we have two sample sizes
wp.t(n1 = 100, n2 = 250, d = 0.5, power = NULL, type = "two.sample.2n")
setwd("C:/Users/ahmad/Desktop/OneDrive - Rensselaer Polytechnic Institute/RPI(F25)/Data_Analytics/Lab1")
setwd("C:/Users/ahmad/Desktop/OneDrive - Rensselaer Polytechnic Institute/RPI(F25)/DataAnalytics2025_Ayaan_Ahmad/Lab1")
library(readr)
library(EnvStats)
# set working directory (relative path)
setwd("~/Courses/Data Analytics/Fall25/labs/lab 1/")
# read data
epi.data <- read_csv("epi_results_2024_pop_gdp.csv")
# view dataframe
View(epi.data)
# print summary of variables in dataframe
summary(epi.data$EPI.new)
# print values in variable
epi.data$EPI.new
# attach dataframe
attach(epi.data)
# print values in variable
EPI.new
EPI <- epi.data$EPI.new
# find NAs in variable - outputs vector of logical values, true if NA, false otherwise
NAs <- is.na(EPI)
EPI[which(NAs)]
# print values in variable
MHP <- epi.data$MHP.new
MHP
# find NAs inv variavle - outputs vector of logical values, true if NA, false otherwise
NAs <- is.na(MHP)
# print NAs
MHP[which(NAs)]
# take subset of NOT NAs from variable
MHP.noNA <- MHP[!NAs]
MHP.noNA
# filter for only values above 30
MHP.above30 <- MHP.noNA[MHP.noNA>30]
MHP.above30
# stats
summary(MHP.above30)
# boxplot of variable(s)
boxplot(EPI, MHP.above30, names = c("EPI","MHP"))
# histogram (frequency distribution)
hist(EPI)
# define sequence of values over which to plot histogram
x <- seq(20., 80., 10)
# histogram (frequency distribution) over range
hist(EPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# print rug
rug(EPI)
x <- seq(20., 80., 5)
# histogram (frequency distribution) over rabge
hist(EPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(EPI,na.rm=TRUE, bw="SJ"))
# print rug
rug(EPI)
# histogram (frequency distribution) over rabge
hist(EPI.new, x, prob=TRUE)
# range
x1<-seq(20,80,1)
# generate probability density values for a normal distribution with given mean and sd
d1 <- dnorm(x1,mean=45, sd=11,log=FALSE)
# print density values
lines(x1,d1)
# generate probability density values for a normal distribution with given mean and sd
d2 <- dnorm(x1,mean=64, sd=11,log=FALSE)
# print density values
lines(x1,d2)
# print density values
lines(x1,.5*d2)
# plot ecdfs
plot(ecdf(EPI), do.points=FALSE, verticals=TRUE)
plot(ecdf(MHP), do.points=FALSE, verticals=TRUE)
# print quantile-quantile plot for variable with theoretical normal distribuion
qqnorm(EPI); qqline(EPI)
# print quantile-quantile plot for random numbers from a normal distribution with theoretical normal distribution
x <- rnorm(500)
qqnorm(x); qqline(x)
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), EPI.new.sub, xlab = "Q-Q plot for norm dsn")
qqline(EPI.new.sub)
# print quantile-quantile plot for 2 variables
qqplot(EPI, MHP, xlab = "Q-Q plot for EPI vs MHP")
qqplot(x, EPI, xlab = "Q-Q plot for EPI vs MHP")
qqline(EPI)
y <- rnorm(500)
qqplot(x, y, xlab = "Q-Q plot for EPI vs MHP")
qqline(y)
x <- rnorm(500)
y <- rnorm(500)
hist(x)
hist(y)
shapiro.test(x)
shapiro.test(y)
ad.test(x)
ad.test(y)
library(stats)
hist(x)
shapiro.test(x)
shapiro.test(y)
ad.test(x)
library(nortest)
ad.test(x)
ad.test(y)
ks.test(x,y)
wilcox.test(x,y)
var.test(x,y)
t.test(x,y)
EPI <- epi.data$EPI.new
EPI# find NAs in variable - outputs vector of logical values, true if NA, false otherwise
# boxplot of variable(s)
boxplot(EPI, MHP.above30, names = c("EPI","MHP"))
View(epi.data)
SPI <- epi.data$SPI.new
SPI
summary(SPI)
ECO <- epi.data$ECO.new
ECO
summary(SPI)
summary(ECO)
boxplot(SPI, ECO, names=c("SPI, ECO"))
boxplot(SPI, ECO, names = c("SPI, ECO"))
boxplot(EPI, MHP.above30, names = c("EPI","MHP"))
boxplot(SPI, ECO, names = c("SPI", "ECO"))
hist(SPI)
# print estimated density curve for variable
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# histogram (frequency distribution)
hist(EPI)
# define sequence of values over which to plot histogram
x <- seq(20., 80., 10)
# histogram (frequency distribution) over range
hist(EPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(EPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# histogram (frequency distribution)
hist(SPI)
# define sequence of values over which to plot histogram
x <- seq(20., 80., 10)
# histogram (frequency distribution) over range
hist(SPI, x, prob=TRUE)
# define sequence of values over which to plot histogram
x <- seq(20., 80., 10)
# histogram (frequency distribution) over range
hist(SPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(SPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# define sequence of values over which to plot histogram
x <- seq(1., 100., 10)
# histogram (frequency distribution) over range
hist(SPI, x, prob=TRUE)
# define sequence of values over which to plot histogram
x <- seq(1., 100., 1)
# histogram (frequency distribution) over range
hist(SPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(SPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# histogram (frequency distribution)
hist(SPI)
# histogram (frequency distribution) over range
hist(SPI, prob=TRUE)
# print estimated density curve for variable
lines(density(SPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# histogram (frequency distribution)
hist(SPI)
# define sequence of values over which to plot histogram
x <- seq(10, 100, 10)
# histogram (frequency distribution) over range
hist(SPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(SPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
range(SPI, na.rm = True)
range(SPI, na.rm = TRUE)
# define sequence of values over which to plot histogram
x <- seq(0, 100, 10)
# histogram (frequency distribution) over range
hist(SPI, x, prob=TRUE)
# define sequence of values over which to plot histogram
x <- seq(0, 100, 5)
# histogram (frequency distribution) over range
hist(SPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(SPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# define sequence of values over which to plot histogram
x <- seq(0, 100, 2)
# histogram (frequency distribution) over range
hist(SPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(SPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# define sequence of values over which to plot histogram
x <- seq(0, 100, 20)
# histogram (frequency distribution) over range
hist(SPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(SPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
# define sequence of values over which to plot histogram
x <- seq(0, 100, 4)
# histogram (frequency distribution) over range
hist(SPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(SPI,na.rm=TRUE,bw=1.)) # or try bw=“SJ”
rug(SPI)
rug(SPI)
hist(ECO)
range(ECO, na.rm = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 1.))
hist(ECO)
range(ECO, na.rm = TRUE)
hist(ECO)
range(ECO, na.rm = TRUE)
x <- seq(20, 85, 5)
hist(ECO, x, prob = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 1.))
x <- seq(20, 85, 3)
hist(ECO, x, prob = TRUE)
x <- seq(20, 85, 5)
hist(ECO, x, prob = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 1.))
lines(density(ECO, na.rm=TRUE, bw = 0.5))
lines(density(ECO, na.rm=TRUE, bw = 2.))
range(ECO, na.rm = TRUE)
x <- seq(20, 85, 5)
hist(ECO, x, prob = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 2.))
hist(SPI, x, prob = TRUE)
x <- seq(0, 100, 4)
hist(SPI, x, prob = TRUE)
x <- seq(0, 100, 4)
hist(SPI, x, prob = TRUE)
lines(density(SPI, na.rm = TRUE, bw = 1.))
# Histogram for SPI
hist(SPI)
x <- seq(0, 100, 4)
hist(SPI, x, prob = TRUE)
lines(density(SPI, na.rm = TRUE, bw = 3.))
rug(SPI)
rug(ECO)
hist(ECO)
range(ECO, na.rm = TRUE)
y <- seq(20, 85, 5)
hist(ECO, y, prob = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 2.))
rug(ECO)
y <- seq(15, 90, 5)
hist(ECO, y, prob = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 2.))
rug(ECO)
y <- seq(15, 90, 10)
hist(ECO, y, prob = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 2.))
y <- seq(15, 90, 2)
hist(ECO, y, prob = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 2.))
rug(ECO)
# ECDF Plots
plot(ecdf(SPI), do.points=FALSE, verticals=TRUE)
plot(ecdf(ECO), do.points=FALSE, verticals=TRUE)
# print quantile-quantile plot for random numbers from a normal distribution with theoretical normal distribution
x <- rnorm(500)
qqnorm(x); qqline(x)
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), SPI.new.sub, xlab = "Q-Q plot for norm dsn")
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), EPI.new.sub, xlab = "Q-Q plot for norm dsn")
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), SPI.new, xlab = "Q-Q plot for norm dsn")
qqline(SPI.new)
# print quantile-quantile plot for 2 variables
qqplot(SPI, MHP, xlab = "Q-Q plot for EPI vs MHP")
# print quantile-quantile plot for random numbers from a normal distribution with theoretical normal distribution
x <- rnorm(500)
qqnorm(x); qqline(x)
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), SPI.new, xlab = "Q-Q plot for norm dsn")
qqline(SPI.new)
# print quantile-quantile plot for 2 variables
qqplot(SPI, ECO, xlab = "Q-Q plot for EPI vs MHP")
qqplot(x, SPI, xlab = "Q-Q plot for EPI vs MHP")
# print quantile-quantile plot for 2 variables
qqplot(SPI, ECO, xlab = "Q-Q plot for EPI vs MHP")
# print quantile-quantile plot for 2 variables
qqplot(SPI, ECO, xlab = "Q-Q plot for SPI vs ECO")
qqplot(x, SPI, xlab = "Q-Q plot for SPI vs ECO")
qqline(SPI)
y <- rnorm(500)
qqplot(x, y, xlab = "Q-Q plot for SPI vs ECO")
qqline(y)
# Normality test
hist(SPI)
hist(ECO)
# Normality test
hist(SPI)
hist(ECO)
shapiro.test(SPI)
shapiro.test(ECO)
# The p-value is less than 0.05 for SPI, meaning not normally distributed
shapiro.test(SPI)
ad.test(SPI)
ad.test(ECO)
# Normality test
hist(SPI)
hist(ECO)
ks.test(SPI,ECO)
wilcox.test(SPI,ECO)
var.test(SPI,ECO)
t.test(SPI,ECO)
# Normality test
hist(SPI)
hist(ECO)
# The p-value is less than 0.05 for SPI, meaning not normally distributed
shapiro.test(SPI)
# The p-value is greater than 0.05 for SPI, meaning normally distributed
shapiro.test(ECO)
# Histogram for SPI
hist(SPI)
x <- seq(0, 100, 4)
hist(SPI, x, prob = TRUE)
lines(density(SPI, na.rm = TRUE, bw = 3.))
rug(SPI)
# Histogram for ECO
hist(ECO)
range(ECO, na.rm = TRUE)
y <- seq(15, 90, 2)
hist(ECO, y, prob = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 2.))
rug(ECO)
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), SPI.new, xlab = "Q-Q plot for norm dsn")
qqline(SPI.new)
# print quantile-quantile plot for random numbers from a normal distribution with theoretical normal distribution
x <- rnorm(500)
y <- seq(15, 90, 2)
hist(ECO, y, prob = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 2.))
rug(ECO)
lines(density(SPI, na.rm = TRUE, bw = 3.))
# Histogram for ECO
hist(ECO)
range(ECO, na.rm = TRUE)
y <- seq(15, 90, 2)
hist(ECO, y, prob = TRUE)
lines(density(ECO, na.rm=TRUE, bw = 2.))
rug(ECO)
# ECDF Plots
plot(ecdf(SPI), do.points=FALSE, verticals=TRUE)
# ECDF Plots
plot(ecdf(SPI), do.points=FALSE, verticals=TRUE)
plot(ecdf(ECO), do.points=FALSE, verticals=TRUE)
# print quantile-quantile plot for variable with theoretical normal distribuion
qqnorm(EPI); qqline(EPI)
# print quantile-quantile plot for random numbers from a normal distribution with theoretical normal distribution
x <- rnorm(500)
qqnorm(x); qqline(x)
# print quantile-quantile plot for variable with any theoretical distribution
qqplot(rnorm(180), SPI.new, xlab = "Q-Q plot for norm dsn")
qqline(SPI.new)
qqplot(x, SPI, xlab = "Q-Q plot for SPI vs ECO")
qqline(SPI)
# histogram (frequency distribution) over rabge
hist(EPI.new, x, prob=TRUE)
x <- seq(20., 80., 5)
# histogram (frequency distribution) over rabge
hist(EPI, x, prob=TRUE)
# print estimated density curve for variable
lines(density(EPI,na.rm=TRUE, bw="SJ"))
# print rug
rug(EPI)
# histogram (frequency distribution) over rabge
hist(EPI.new, x, prob=TRUE)
# range
x1<-seq(20,80,1)
# generate probability density values for a normal distribution with given mean and sd
d1 <- dnorm(x1,mean=45, sd=11,log=FALSE)
# print density values
lines(x1,d1)
# generate probability density values for a normal distribution with given mean and sd
d2 <- dnorm(x1,mean=64, sd=11,log=FALSE)
# print density values
lines(x1,d2)
# print density values
lines(x1,.5*d2)
# plot ecdfs
plot(ecdf(EPI), do.points=FALSE, verticals=TRUE)
# histogram (frequency distribution) over rabge
hist(SPI, x, prob=TRUE)
x <- seq(0, 100, 4)
# histogram (frequency distribution) over rabge
hist(SPI, x, prob=TRUE)
# range
x1<-seq(20,80,1)
# generate probability density values for a normal distribution with given mean and sd
d1 <- dnorm(x1,mean=45, sd=11,log=FALSE)
# print density values
lines(x1,d1)
# generate probability density values for a normal distribution with given mean and sd
d2 <- dnorm(x1,mean=64, sd=11,log=FALSE)
# print density values
lines(x1,d2)
# print density values
lines(x1,.5*d2)
summary(SPI)
# histogram (frequency distribution) over rabge
hist(SPI, x, prob=TRUE)
# range
x1<-seq(20,80,1)
# generate probability density values for a normal distribution with given mean and sd
d1 <- dnorm(x1,mean=50, sd=5,log=FALSE)
# print density values
lines(x1,d1)
# generate probability density values for a normal distribution with given mean and sd
d2 <- dnorm(x1,mean=64, sd=5,log=FALSE)
# print density values
lines(x1,d2)
# print density values
lines(x1,.5*d2)
# histogram (frequency distribution) over rabge
hist(SPI, x, prob=TRUE)
x1 <- seq(20, 80, 1)
d1 <- dnorm(x1, mean=50, sd=10)
lines(x1, d1, col="red", lwd=2)
d2 <- dnorm(x1, mean=64, sd=10)
lines(x1, d2, col="blue", lwd=2)
# example of a scaled mixture
lines(x1, 0.5*d1 + 0.5*d2, col="darkgreen", lwd=2)
# ECDF Plots
plot(ecdf(SPI), do.points=FALSE, verticals=TRUE)
# histogram (frequency distribution) over rabge
hist(SPI, x, prob=TRUE)
x1 <- seq(20, 80, 1)
d1 <- dnorm(x1, mean=40, sd=10)
lines(x1, d1, col="red", lwd=2)
d1 <- dnorm(x1, mean=100, sd=10)
lines(x1, d1, col="red", lwd=2)
d1 <- dnorm(x1, mean=60, sd=10)
lines(x1, d1, col="red", lwd=2)
d1 <- dnorm(x1, mean=70, sd=10)
lines(x1, d1, col="red", lwd=2)
# histogram (frequency distribution) over rabge
hist(SPI, x, prob=TRUE)
x1 <- seq(20, 80, 1)
d1 <- dnorm(x1, mean=70, sd=10)
lines(x1, d1, col="red", lwd=2)
# histogram (frequency distribution) over rabge
hist(SPI, x, prob=TRUE)
x1 <- seq(20, 80, 1)
d1 <- dnorm(x1, mean=20, sd=10)
lines(x1, d1, col="red", lwd=2)
# histogram (frequency distribution) over rabge
h <- hist(SPI, breaks=20, freq=TRUE)  # freq=TRUE = counts, not densities
x1 <- seq(20, 80, 1)
d1 <- dnorm(x1, mean=50, sd=5)
d1_scaled <- d1 * diff(h$mids[1:2]) * length(SPI)   # rescale to counts
lines(x1, d1_scaled, col="red", lwd=2)
d2 <- dnorm(x1, mean=64, sd=5)
d2_scaled <- d2 * diff(h$mids[1:2]) * length(SPI)
lines(x1, d2_scaled, col="blue", lwd=2)
# histogram (frequency distribution) over rabge
hist(SPI, x, prob=TRUE)
# histogram (frequency distribution) over rabge
hist(SPI, x, prob=TRUE)
x1 <- seq(0, 100, 4)
d1 <- dnorm(x1, mean=40, sd=10)
lines(x1, d1, col="red", lwd=2)
d2 <- dnorm(x1, mean=64, sd=10)
lines(x1, d2, col="blue", lwd=2)
# example of a scaled mixture
lines(x1, 0.5*d1 + 0.5*d2, col="darkgreen", lwd=2)
x1 <- seq(0, 100, 10)
d1 <- dnorm(x1, mean=40, sd=10)
lines(x1, d1, col="red", lwd=2)
d2 <- dnorm(x1, mean=64, sd=10)
lines(x1, d2, col="blue", lwd=2)
# example of a scaled mixture
lines(x1, 0.5*d1 + 0.5*d2, col="darkgreen", lwd=2)
# histogram (frequency distribution) over rabge
hist(SPI, x, prob=TRUE)
x1 <- seq(0, 100, 10)
d1 <- dnorm(x1, mean=40, sd=10)
lines(x1, d1, col="red", lwd=2)
d2 <- dnorm(x1, mean=64, sd=10)
lines(x1, d2, col="blue", lwd=2)
# example of a scaled mixture
lines(x1, 0.5*d1 + 0.5*d2, col="darkgreen", lwd=2)
# FOR ECO
hist(SPI, x, prob=TRUE)
x1 <- seq(15, 90, 2)
d1 <- dnorm(x1, mean=40, sd=10)
lines(x1, d1, col="red", lwd=2)
d2 <- dnorm(x1, mean=64, sd=10)
lines(x1, d2, col="blue", lwd=2)
lines(x1, 0.5*d1 + 0.5*d2, col="darkgreen", lwd=2)
# FOR ECO
hist(ECO, x, prob=TRUE)
x1 <- seq(15, 90, 2)
d1 <- dnorm(x1, mean=40, sd=10)
lines(x1, d1, col="red", lwd=2)
d2 <- dnorm(x1, mean=64, sd=10)
lines(x1, d2, col="blue", lwd=2)
lines(x1, 0.5*d1 + 0.5*d2, col="darkgreen", lwd=2)
