ylab("Length")
# Above 0.8 = sufficient power
# Below 0.8 = not sufficient power
wp.correlation(n = 50, r = 0.3, alpha = 0.05)
library(WebPower)
# Above 0.8 = sufficient power
# Below 0.8 = not sufficient power
wp.correlation(n = 50, r = 0.3, alpha = 0.05)
# TO get it above 0.8, we can change r and/or sample size. Do not recommend changing alpha
wp.correlation(n = 50, r = 0.384, alpha = 0.05)
# TO get it above 0.8, we can change r and/or sample size. Do not recommend changing alpha
wp.correlation(n = 50, r = 0.384, alpha = 0.1)
# TO get it above 0.8, we can change r and/or sample size. Do not recommend changing alpha
wp.correlation(n = 50, r = 0.384, alpha = 0.1)
# TO get it above 0.8, we can change r and/or sample size. Do not recommend changing alpha
wp.correlation(n = 50, r = 0.384, alpha = 0.001)
# TO get it above 0.8, we can change r and/or sample size. Do not recommend changing alpha
wp.correlation(n = 50, r = 0.384, alpha = 0.05)
# TO get it above 0.8, we can change r and/or sample size. Do not recommend changing alpha
wp.correlation(n = 50, r = 0.384, alpha = 0.5)
0
# TO get it above 0.8, we can change r and/or sample size. Do not recommend changing alpha
wp.correlation(n = 50, r = 0.384, alpha = 0.05)
# Fixed contraints, can only afford 50 samples
wp.correlation(n = 50, alpha = 0.05, power = 0.8)
wp.correlation(r = 0.3, alpha = 0.05, power = 0.8)
# plot sample size power
example <- wp.correlation(n=seq(50, 100, 10),
0.3, alpha = 0.05)
plot(example)
# D = effect size, how many stds away
wp.t(n1 = NULL, d = 0.03, power = 0.08, type = "paired")
wp.t(n1 = NULL, d = 0.03, power = 0.08, type = "two.sample")
# We can sample 1000
# Dont know effect size
# What effect size can we detect
wp.t(n1 = 1000, d = NULL, power = 0.8, type = "two.sample")
# .2n is for when we have two sample sizes
wp.t(n1 = 100, n2 = 250, d = 0.5, power = NULL, type = "two.sample.2n")
setwd("C:/Users/ahmad/Desktop/OneDrive - Rensselaer Polytechnic Institute/RPI(F25)/DataAnalytics2025_Ayaan_Ahmad/Lab2")
library(tidyverse)
library(ggplot2)
NY_data <- read.csv("NY-House-Dataset.csv")
View(NY_data)
### Exploratory Analysis ####
Price <- NY_data$PRICE
PropertySqFt <- NY_data$PROPERTYSQFT
Beds <- NY_data$BEDS
Bath <- NY_data$BATH
# NA values
na.indices <- is.na(Price) | is.na(PropertySqFt) | is.na(Beds) | is.na(Bath)
# drop NAs
Price.compl <- Price[!na.indices]
PropertySqFt.compl <- PropertySqFt[!na.indices]
Beds.compl <- Beds[!na.indices]
Bath.compl <- Bath[!na.indices]
NY_data.compl <- data.frame(Price = Price.compl, PropertySqFt = PropertySqFt.compl, Beds = Beds.compl, Bath = Bath.compl)
# Log transform price for a better fit
NY_data.compl$Price <- log(NY_data.compl$Price)
#Fit 3 linear models with Price as the response variable and with combinations of PropertySqFt, Beds, and Bath as predictors.
model1 = lm(Price ~ PropertySqFt, data = NY_data.compl)
model2 = lm(Price ~ PropertySqFt + Beds, data = NY_data.compl)
model3 = lm(Price ~ PropertySqFt + Beds + Bath, data = NY_data.compl)
# Boxplot for outliers in price
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# Clean the ouliers
# There are still outliers in the data but they are not as egregious
price_outliers <- boxplot.stats(NY_data.compl$Price)$out
NY_data.compl <- NY_data.compl %>% filter(!(Price %in% price_outliers))
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = PropertySqFt, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log (Price)")
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = PropertySqFt, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log (Price)")
# The p < 2.2e-16 meaning that this model is statistically significant
summary(model1)
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = PropertySqFt, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = PropertySqFt, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()+
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log (Price)")
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = PropertySqFt, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()+
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log (Price)")
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = PropertySqFt, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()+
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Price")
ggplot(NY_data.compl, aes(x = Beds, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log(Price)")
ggplot(NY_data.compl, aes(x = Baths, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log(Price)")
ggplot(NY_data.compl, aes(x = Bath, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log(Price)")
ggplot(NY_data.compl, aes(x = Beds, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log(Price)")
ggplot(NY_data.compl, aes(x = Bath, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log(Price)")
# MODEL 2: PROPRTYSQFT + BEDS
summary(model2)
summary(model3)
# MODEL 2: PROPRTYSQFT + BEDS
summary(model2)
summary(model3)
clear
cls
clear()
ggplot(NY_data.compl, aes(x = Bath, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log(Price)")
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = PropertySqFt, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()+
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Price")
# The p < 2.2e-16 meaning that this model is statistically significant
summary(model1)
ggplot(NY_data.compl, aes(x = Beds, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Log(Price)")
ggplot(NY_data.compl, aes(x = Beds, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Price")
# MODEL 2: PROPRTYSQFT + BEDS
summary(model2)
ggplot(NY_data.compl, aes(x = Bath, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Price")
summary(model3)
NY_data <- read.csv("NY-House-Dataset.csv")
Price <- NY_data$PRICE
PropertySqFt <- NY_data$PROPERTYSQFT
Beds <- NY_data$BEDS
Bath <- NY_data$BATH
# NA values
na.indices <- is.na(Price) | is.na(PropertySqFt) | is.na(Beds) | is.na(Bath)
# drop NAs
Price.compl <- Price[!na.indices]
PropertySqFt.compl <- PropertySqFt[!na.indices]
Beds.compl <- Beds[!na.indices]
Bath.compl <- Bath[!na.indices]
NY_data.compl <- data.frame(Price = Price.compl, PropertySqFt = PropertySqFt.compl, Beds = Beds.compl, Bath = Bath.compl)
# Log transform price for a better fit
NY_data.compl$LogPrice <- log(NY_data.compl$Price)
NY_daa.compl$LogProperty <- log(NY_data.compl$PropertySqFt)
#Fit 3 linear models with Price as the response variable and with combinations of PropertySqFt, Beds, and Bath as predictors.
model1 = lm(Price ~ PropertySqFt, data = NY_data.compl)
model2 = lm(Price ~ PropertySqFt + Beds, data = NY_data.compl)
model3 = lm(Price ~ PropertySqFt + Beds + Bath, data = NY_data.compl)
# Boxplot for outliers in price
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# Clean the ouliers
# There are still outliers in the data but they are not as egregious
price_outliers <- boxplot.stats(NY_data.compl$Price)$out
NY_data.compl <- NY_data.compl %>% filter(!(Price %in% price_outliers))
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = LogProperty, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()+
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Price")
# Log transform price for a better fit
NY_data.compl$LogPrice <- log(NY_data.compl$Price)
NY_daa.compl$LogProperty <- log(NY_data.compl$PropertySqFt)
Price <- NY_data$PRICE
PropertySqFt <- NY_data$PROPERTYSQFT
Beds <- NY_data$BEDS
Bath <- NY_data$BATH
# NA values
na.indices <- is.na(Price) | is.na(PropertySqFt) | is.na(Beds) | is.na(Bath)
# drop NAs
Price.compl <- Price[!na.indices]
PropertySqFt.compl <- PropertySqFt[!na.indices]
Beds.compl <- Beds[!na.indices]
Bath.compl <- Bath[!na.indices]
NY_data.compl <- data.frame(Price = Price.compl, PropertySqFt = PropertySqFt.compl, Beds = Beds.compl, Bath = Bath.compl)
# Log transform price for a better fit
NY_data.compl$LogPrice <- log(NY_data.compl$Price)
NY_data.compl$LogProperty <- log(NY_data.compl$PropertySqFt)
#Fit 3 linear models with Price as the response variable and with combinations of PropertySqFt, Beds, and Bath as predictors.
model1 = lm(LogPrice ~ LogProperty, data = NY_data.compl)
model2 = lm(LogPrice ~ LogProperty + Beds, data = NY_data.compl)
model3 = lm(LogPrice ~ LogProperty + Beds + Bath, data = NY_data.compl)
# Boxplot for outliers in price
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# Clean the ouliers
# There are still outliers in the data but they are not as egregious
price_outliers <- boxplot.stats(NY_data.compl$Price)$out
NY_data.compl <- NY_data.compl %>% filter(!(Price %in% price_outliers))
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = LogProperty, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()+
labs(title = "Log Price vs. Property Square Footage",
x = "Property Square Footage",
y = "Price")
# The p < 2.2e-16 meaning that this model is statistically significant
summary(model1)
# The p < 2.2e-16 meaning that this model is statistically significant
summary(model1)
# MODEL 2: PROPRTYSQFT + BEDS
summary(model2)
summary(model3)
ggplot(NY_data.compl, aes(x = Beds, y = Price)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Beds",
x = "Property Square Footage",
y = "Price")
ggplot(NY_data.compl, aes(x = Beds, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Beds",
x = "Property Square Footage",
y = "Price")
NY_data.compl$LogBeds <- log(NY_data.compl$Beds)
#Fit 3 linear models with Price as the response variable and with combinations of PropertySqFt, Beds, and Bath as predictors.
model1 = lm(LogPrice ~ LogProperty, data = NY_data.compl)
model2 = lm(LogPrice ~ LogProperty + Beds, data = NY_data.compl)
model3 = lm(LogPrice ~ LogProperty + Beds + Bath, data = NY_data.compl)
# Boxplot for outliers in price
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# Clean the ouliers
# There are still outliers in the data but they are not as egregious
price_outliers <- boxplot.stats(NY_data.compl$Price)$out
Price <- NY_data$PRICE
PropertySqFt <- NY_data$PROPERTYSQFT
Beds <- NY_data$BEDS
Bath <- NY_data$BATH
# NA values
na.indices <- is.na(Price) | is.na(PropertySqFt) | is.na(Beds) | is.na(Bath)
# drop NAs
Price.compl <- Price[!na.indices]
PropertySqFt.compl <- PropertySqFt[!na.indices]
Beds.compl <- Beds[!na.indices]
Bath.compl <- Bath[!na.indices]
NY_data.compl <- data.frame(Price = Price.compl, PropertySqFt = PropertySqFt.compl, Beds = Beds.compl, Bath = Bath.compl)
# Log transform price for a better fit
NY_data.compl$LogPrice <- log(NY_data.compl$Price)
NY_data.compl$LogProperty <- log(NY_data.compl$PropertySqFt)
NY_data.compl$LogBeds <- log(NY_data.compl$Beds)
#Fit 3 linear models with Price as the response variable and with combinations of PropertySqFt, Beds, and Bath as predictors.
model1 = lm(LogPrice ~ LogProperty, data = NY_data.compl)
model2 = lm(LogPrice ~ LogProperty + Beds, data = NY_data.compl)
model3 = lm(LogPrice ~ LogProperty + Beds + Bath, data = NY_data.compl)
# Boxplot for outliers in price
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# Clean the ouliers
# There are still outliers in the data but they are not as egregious
price_outliers <- boxplot.stats(NY_data.compl$Price)$out
NY_data.compl <- NY_data.compl %>% filter(!(Price %in% price_outliers))
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = LogProperty, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()+
labs(title = "Log Price vs. Log Property Square Footage",
x = "Property Square Footage",
y = "Price")
# The p < 2.2e-16 meaning that this model is statistically significant
summary(model1)
# MODEL 2: PROPRTYSQFT + BEDS
summary(model2)
ggplot(NY_data.compl, aes(x = Beds, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Beds",
x = "Beds",
y = "Price")
ggplot(NY_data.compl, aes(x = LogBeds, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Log Beds",
x = "Beds",
y = "Price")
NY_data.compl$LogBath <- log(NY_data.compl$Bath)
#Fit 3 linear models with Price as the response variable and with combinations of PropertySqFt, Beds, and Bath as predictors.
model1 = lm(LogPrice ~ LogProperty, data = NY_data.compl)
model2 = lm(LogPrice ~ LogProperty + Beds, data = NY_data.compl)
model3 = lm(LogPrice ~ LogProperty + Beds + Bath, data = NY_data.compl)
Price <- NY_data$PRICE
PropertySqFt <- NY_data$PROPERTYSQFT
Beds <- NY_data$BEDS
Bath <- NY_data$BATH
# NA values
na.indices <- is.na(Price) | is.na(PropertySqFt) | is.na(Beds) | is.na(Bath)
# drop NAs
Price.compl <- Price[!na.indices]
PropertySqFt.compl <- PropertySqFt[!na.indices]
Beds.compl <- Beds[!na.indices]
Bath.compl <- Bath[!na.indices]
NY_data.compl <- data.frame(Price = Price.compl, PropertySqFt = PropertySqFt.compl, Beds = Beds.compl, Bath = Bath.compl)
# Log transform price for a better fit
NY_data.compl$LogPrice <- log(NY_data.compl$Price)
NY_data.compl$LogProperty <- log(NY_data.compl$PropertySqFt)
NY_data.compl$LogBeds <- log(NY_data.compl$Beds)
NY_data.compl$LogBath <- log(NY_data.compl$Bath)
#Fit 3 linear models with Price as the response variable and with combinations of PropertySqFt, Beds, and Bath as predictors.
model1 = lm(LogPrice ~ LogProperty, data = NY_data.compl)
model2 = lm(LogPrice ~ LogProperty + Beds, data = NY_data.compl)
model3 = lm(LogPrice ~ LogProperty + Beds + Bath, data = NY_data.compl)
# Boxplot for outliers in price
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# Clean the ouliers
# There are still outliers in the data but they are not as egregious
price_outliers <- boxplot.stats(NY_data.compl$Price)$out
NY_data.compl <- NY_data.compl %>% filter(!(Price %in% price_outliers))
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = LogProperty, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()+
labs(title = "Log Price vs. Log Property Square Footage",
x = "Property Square Footage",
y = "Price")
# The p < 2.2e-16 meaning that this model is statistically significant
summary(model1)
# MODEL 2: PROPRTYSQFT + BEDS
summary(model2)
ggplot(NY_data.compl, aes(x = LogBeds, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Log Beds",
x = "Beds",
y = "Price")
summary(model3)
ggplot(NY_data.compl, aes(x = LogBath, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw() +
labs(title = "Log Price vs. Bath",
x = "Bath",
y = "Price")
ggplot(NY_data.compl, aes(x = LogBeds, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "blue") +
theme_bw() +
labs(title = "Log Price vs. Log Beds",
x = "Beds",
y = "Price")
summary(model3)
ggplot(NY_data.compl, aes(x = LogBath, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "green") +
theme_bw() +
labs(title = "Log Price vs. Bath",
x = "Bath",
y = "Price")
# MODEL 2: PROPRTYSQFT + BEDS
summary(model2)
model2 = lm(LogPrice ~ LogProperty + LogBeds, data = NY_data.compl)
model3 = lm(LogPrice ~ LogProperty + LogBeds + LogBath, data = NY_data.compl)
View(NY_data)
Price <- NY_data$PRICE
PropertySqFt <- NY_data$PROPERTYSQFT
Beds <- NY_data$BEDS
Bath <- NY_data$BATH
# NA values
na.indices <- is.na(Price) | is.na(PropertySqFt) | is.na(Beds) | is.na(Bath)
# drop NAs
Price.compl <- Price[!na.indices]
PropertySqFt.compl <- PropertySqFt[!na.indices]
Beds.compl <- Beds[!na.indices]
Bath.compl <- Bath[!na.indices]
NY_data.compl <- data.frame(Price = Price.compl, PropertySqFt = PropertySqFt.compl, Beds = Beds.compl, Bath = Bath.compl)
# Log transform price for a better fit
NY_data.compl$LogPrice <- log(NY_data.compl$Price)
NY_data.compl$LogProperty <- log(NY_data.compl$PropertySqFt)
NY_data.compl$LogBeds <- log(NY_data.compl$Beds)
NY_data.compl$LogBath <- log(NY_data.compl$Bath)
#Fit 3 linear models with Price as the response variable and with combinations of PropertySqFt, Beds, and Bath as predictors.
model1 = lm(LogPrice ~ LogProperty, data = NY_data.compl)
model2 = lm(LogPrice ~ LogProperty + LogBeds, data = NY_data.compl)
model3 = lm(LogPrice ~ LogProperty + LogBeds + LogBath, data = NY_data.compl)
# The +1 is to avoid log(0) == inf errors
NY_data.compl$LogBath <- log(NY_data.compl$Bath + 1)
#Fit 3 linear models with Price as the response variable and with combinations of PropertySqFt, Beds, and Bath as predictors.
model1 = lm(LogPrice ~ LogProperty, data = NY_data.compl)
model2 = lm(LogPrice ~ LogProperty + LogBeds, data = NY_data.compl)
model3 = lm(LogPrice ~ LogProperty + LogBeds + LogBath, data = NY_data.compl)
# Boxplot for outliers in price
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# Clean the ouliers
# There are still outliers in the data but they are not as egregious
price_outliers <- boxplot.stats(NY_data.compl$Price)$out
NY_data.compl <- NY_data.compl %>% filter(!(Price %in% price_outliers))
boxplot(NY_data.compl$Price, main="Boxplot for Price", ylab="Price")
# MODEL 1: PRICE + PROPERTYSQFT
ggplot(NY_data.compl, aes(x = LogProperty, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()+
labs(title = "Log Price vs. Log Property Square Footage",
x = "Property Square Footage",
y = "Price")
# The p < 2.2e-16 meaning that this model is statistically significant
summary(model1)
# MODEL 2: PROPRTYSQFT + BEDS
summary(model2)
ggplot(NY_data.compl, aes(x = LogBeds, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "blue") +
theme_bw() +
labs(title = "Log Price vs. Log Beds",
x = "Beds",
y = "Price")
summary(model3)
ggplot(NY_data.compl, aes(x = LogBath, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "green") +
theme_bw() +
labs(title = "Log Price vs. Log Bath",
x = "Bath",
y = "Price")
# MODEL 2: PROPRTYSQFT + BEDS
summary(model2)
ggplot(NY_data.compl, aes(x = LogBath, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "green") +
theme_bw() +
labs(title = "Log Price vs. Log Bath",
x = "Bath",
y = "Price")
summary(model3)
ggplot(NY_data.compl, aes(x = LogProperty, y = LogPrice)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", col = "red") +
theme_bw()+
labs(title = "Log Price vs. Log Property Square Footage",
x = "Property Square Footage",
y = "Price")
